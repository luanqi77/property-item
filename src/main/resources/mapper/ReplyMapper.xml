<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.dao.ReplyMapper">
  <resultMap id="BaseResultMap" type="com.qf.domain.Reply">
    <constructor>
      <idArg column="reply_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="advise_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="staff_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="reply_deso" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="reply_time" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="staff_name" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    reply_id, advise_id, staff_id, reply_deso, reply_time, status, staff_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reply
    where reply_id = #{replyId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from reply
    where reply_id = #{replyId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qf.domain.Reply">
    insert into reply (reply_id, advise_id, staff_id, 
      reply_deso, reply_time, status, 
      staff_name)
    values (#{replyId,jdbcType=INTEGER}, #{adviseId,jdbcType=INTEGER}, #{staffId,jdbcType=INTEGER}, 
      #{replyDeso,jdbcType=VARCHAR}, #{replyTime,jdbcType=DATE}, #{status,jdbcType=INTEGER}, 
      #{staffName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.domain.Reply">
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="replyId != null">
        reply_id,
      </if>
      <if test="adviseId != null">
        advise_id,
      </if>
      <if test="staffId != null">
        staff_id,
      </if>
      <if test="replyDeso != null">
        reply_deso,
      </if>
      <if test="replyTime != null">
        reply_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="staffName != null">
        staff_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="replyId != null">
        #{replyId,jdbcType=INTEGER},
      </if>
      <if test="adviseId != null">
        #{adviseId,jdbcType=INTEGER},
      </if>
      <if test="staffId != null">
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="replyDeso != null">
        #{replyDeso,jdbcType=VARCHAR},
      </if>
      <if test="replyTime != null">
        #{replyTime,jdbcType=DATE},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="staffName != null">
        #{staffName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.domain.Reply">
    update reply
    <set>
      <if test="adviseId != null">
        advise_id = #{adviseId,jdbcType=INTEGER},
      </if>
      <if test="staffId != null">
        staff_id = #{staffId,jdbcType=INTEGER},
      </if>
      <if test="replyDeso != null">
        reply_deso = #{replyDeso,jdbcType=VARCHAR},
      </if>
      <if test="replyTime != null">
        reply_time = #{replyTime,jdbcType=DATE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="staffName != null">
        staff_name = #{staffName,jdbcType=VARCHAR},
      </if>
    </set>
    where reply_id = #{replyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.domain.Reply">
    update reply
    set advise_id = #{adviseId,jdbcType=INTEGER},
      staff_id = #{staffId,jdbcType=INTEGER},
      reply_deso = #{replyDeso,jdbcType=VARCHAR},
      reply_time = #{replyTime,jdbcType=DATE},
      status = #{status,jdbcType=INTEGER},
      staff_name = #{staffName,jdbcType=VARCHAR}
    where reply_id = #{replyId,jdbcType=INTEGER}
  </update>
  <resultMap id="replyResultMap" type="com.qf.domain.AdviseAndReply">
    <result property="description" column="description"></result>
    <result property="replyDeso" column="reply_deso"></result>
    <result property="adviseTime" column="advise_time"></result>
    <result property="replyTime" column="reply_time"></result>
  </resultMap>
  <select id="selectAdviseAndReplyByStaff" resultMap="replyResultMap" parameterType="java.util.Map">
    SELECT
      a.description,
      a.advise_time,
      r.reply_deso,
      r.reply_time
    FROM
      advise a,
      reply r
    WHERE
      a.advise_id=r.advise_id
      and
      r.staff_id=#{staffId}
      limit #{startIndex},#{pageSize}

  </select>

  <select id="selectReplyByStaffId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(staff_id) from reply where  staff_id=#{staffId}
  </select>
</mapper>